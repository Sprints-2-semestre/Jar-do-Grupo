Index: looca-oficial/src/main/java/dao/MaquinaDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dao;\r\n\r\nimport com.github.britooo.looca.api.core.Looca;\r\nimport com.github.britooo.looca.api.group.processador.Processador;\r\nimport com.github.britooo.looca.api.group.processos.Processo;\r\nimport com.github.britooo.looca.api.group.rede.RedeInterface;\r\nimport com.github.britooo.looca.api.group.sistema.Sistema;\r\nimport conexao.Conexao;\r\nimport conexao.ConexaoSlack;\r\nimport modelo.Maquina;\r\nimport modelo.MaquinaTipoComponente;\r\nimport org.springframework.jdbc.core.BeanPropertyRowMapper;\r\nimport org.springframework.jdbc.core.JdbcTemplate;\r\n\r\nimport java.io.BufferedWriter;\r\nimport java.io.File;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.math.BigDecimal;\r\nimport java.math.BigInteger;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.sql.*;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static java.lang.Class.forName;\r\nimport static jdk.internal.org.jline.utils.Colors.s;\r\n\r\npublic class MaquinaDao {\r\n    Looca looca = new Looca();\r\n    Conexao conexao = new Conexao();\r\n    JdbcTemplate con = conexao.getConexaoDoBanco();\r\n\r\n    private String idMaquina = looca.getProcessador().getId();\r\n    private String sistemaOperacional = looca.getSistema().getSistemaOperacional();\r\n    private Integer arquitetura = looca.getSistema().getArquitetura();\r\n    private String fabricante = looca.getProcessador().getFabricante();\r\n    private Long tempoAtividade = looca.getSistema().getTempoDeAtividade();\r\n\r\n    List<RedeInterface> redes = new ArrayList<>();\r\n\r\n    ConexaoSlack conexaoSlack = new ConexaoSlack();\r\n    ValidacaoIdMaquina validIdMaquina = new ValidacaoIdMaquina();\r\n    MaquinaTipoComponenteDao maquinaTipoComponenteDao = new MaquinaTipoComponenteDao();\r\n\r\n    public void salvar() throws IOException {\r\n        Boolean existeIdMaquina = validIdMaquina.verificarParametro(idMaquina);\r\n\r\n        if (existeIdMaquina) {\r\n            maquinaTipoComponenteDao.salvar();\r\n\r\n            Double usoCpu = looca.getProcessador().getUso();\r\n//            if (usoCpu >= parametroPreocupante && usoCpu < parametroCritico) {\r\n//                conexaoSlack.enviarMensagemCpu(usoCpu);\r\n//            }\r\n\r\n            // Captura do uso de RAM;\r\n            Long usoRam = looca.getMemoria().getEmUso();\r\n            Double divisaoUsoRam = (usoRam / 1000000000.0);\r\n            String usoRamFormatado = String.format(\"%.1f\", divisaoUsoRam);\r\n\r\n\r\n//            if (s >= parametroRamPreocupante && s < parametroRamCritico) {\r\n//                conexaoSlack.enviarMensagemRam(s);\r\n//            }\r\n\r\n            Long ramDisponivel = looca.getMemoria().getDisponivel();\r\n            Double divisaoRamDisponivel = (ramDisponivel / 1000000000.0);\r\n            String ramDisponivelFormatado = String.format(\"%.1f\", divisaoRamDisponivel);\r\n            StringBuilder sb = new StringBuilder(ramDisponivelFormatado);\r\n            sb.setCharAt(1, '.');\r\n            StringBuilder s = new StringBuilder(usoRamFormatado);\r\n            s.setCharAt(1, '.');\r\n\r\n\r\n            // Captura do uso de DISCO;\r\n            Long tamanhoTotalDisco = (looca.getGrupoDeDiscos().getVolumes().get(0).getTotal() / 1000 / 1000 / 1000);\r\n            Long tamanhoDisponivel = (looca.getGrupoDeDiscos().getVolumes().get(0).getDisponivel() / 1000 / 1000 / 1000);\r\n\r\n            try {\r\n                con.update(\"INSERT INTO dadosComponente (qtdUsoCpu, fkMaquina, fkTipoComponente) VALUES (?, ?, ?);\", usoCpu, idMaquina, 1);\r\n            } catch (Exception erroInsertCPU) {\r\n                erroInsertCPU.getMessage();\r\n                Path path = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs\");\r\n                Path path1 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now());\r\n                File log = new File(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now() + \"/\" + LocalDate.now() + \".txt\");\r\n\r\n                if (!Files.exists(path)) {\r\n                    Files.createDirectory(path);\r\n                    Files.createDirectory(path1);\r\n                    log.createNewFile();\r\n                    FileWriter fw = new FileWriter(log, true);\r\n                    BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                    bw.write(LocalDateTime.now() + erroInsertCPU.getMessage());\r\n                    bw.newLine();\r\n\r\n                    bw.close();\r\n                    fw.close();\r\n                }else {\r\n                    FileWriter fw = new FileWriter(log, true);\r\n                    BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                    bw.write(LocalDateTime.now() + erroInsertCPU.getMessage());\r\n                    bw.newLine();\r\n\r\n                    bw.close();\r\n                    fw.close();\r\n                }\r\n            }\r\n        try {\r\n            con.update(\"INSERT INTO dadosComponente (memoriaEmUso, memoriaDisponivel, fkMaquina, fkTipoComponente) VALUES (?, ?, ?, ?);\", s, sb, idMaquina, 2);\r\n        } catch (Exception erroInsertMemoria) {\r\n            erroInsertMemoria.getMessage();\r\n            Path path = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs\");\r\n            Path path1 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now());\r\n            File log = new File(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now() + \"/\" + LocalDate.now() + \".txt\");\r\n\r\n            if (!Files.exists(path)) {\r\n                Files.createDirectory(path);\r\n                Files.createDirectory(path1);\r\n                log.createNewFile();\r\n                FileWriter fw = new FileWriter(log, true);\r\n                BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                bw.write(LocalDateTime.now() + erroInsertMemoria.getMessage());\r\n                bw.newLine();\r\n\r\n                bw.close();\r\n                fw.close();\r\n            }else {\r\n                FileWriter fw = new FileWriter(log, true);\r\n                BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                bw.write(LocalDateTime.now() + erroInsertMemoria.getMessage());\r\n                bw.newLine();\r\n\r\n                bw.close();\r\n                fw.close();\r\n            }\r\n        }\r\n        try {\r\n            con.update(\"INSERT INTO dadosComponente (usoAtualDisco, usoDisponivelDisco, fkMaquina, fkTipoComponente) VALUES (?, ?, ?, ?);\", (tamanhoTotalDisco - tamanhoDisponivel), tamanhoDisponivel, idMaquina, 3);\r\n        } catch (Exception erroInsertDisco) {\r\n            erroInsertDisco.getMessage();\r\n            Path path = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs\");\r\n            Path path1 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now());\r\n            File log = new File(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now() + \"/\" + LocalDate.now() + \".txt\");\r\n\r\n            if (!Files.exists(path)) {\r\n                Files.createDirectory(path);\r\n                Files.createDirectory(path1);\r\n                log.createNewFile();\r\n                FileWriter fw = new FileWriter(log, true);\r\n                BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                bw.write(LocalDateTime.now() + erroInsertDisco.getMessage());\r\n                bw.newLine();\r\n\r\n                bw.close();\r\n                fw.close();\r\n            }else {\r\n                FileWriter fw = new FileWriter(log, true);\r\n                BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                bw.write(LocalDateTime.now() + erroInsertDisco.getMessage());\r\n                bw.newLine();\r\n\r\n                bw.close();\r\n                fw.close();\r\n            }\r\n                try {\r\n                    con.update(\"INSERT INTO maquina (idMaquina, sistemaOperacional, arquitetura, fabricante, tempoAtividade) VALUES (?, ?, ?, ?, ?);\",\r\n                            idMaquina, sistemaOperacional, arquitetura,\r\n                            fabricante, tempoAtividade);\r\n\r\n                    maquinaTipoComponenteDao.salvar();\r\n                } catch (Exception erroInsertSO) {\r\n                    erroInsertSO.getMessage();\r\n                    Path path2 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs\");\r\n                    Path path3 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now());\r\n                    File log1 = new File(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now() + \"/\" + LocalDate.now() + \".txt\");\r\n\r\n                    if (!Files.exists(path)) {\r\n                        Files.createDirectory(path2);\r\n                        Files.createDirectory(path3);\r\n                        log.createNewFile();\r\n                        FileWriter fw = new FileWriter(log1, true);\r\n                        BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                        bw.write(LocalDateTime.now() + erroInsertSO.getMessage());\r\n                        bw.newLine();\r\n\r\n                        bw.close();\r\n                        fw.close();\r\n                    }else {\r\n                        FileWriter fw = new FileWriter(log, true);\r\n                        BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                        bw.write(LocalDateTime.now() + erroInsertSO.getMessage());\r\n                        bw.newLine();\r\n\r\n                        bw.close();\r\n                        fw.close();\r\n                    }\r\n                }\r\n\r\n                // Captura do uso de DISCO;\r\n                tamanhoTotalDisco = (looca.getGrupoDeDiscos().getVolumes().get(0).getTotal() / 1000 / 1000 / 1000);\r\n                tamanhoDisponivel = (looca.getGrupoDeDiscos().getVolumes().get(0).getDisponivel() / 1000 / 1000 / 1000);\r\n\r\n                try {\r\n                    con.update(\"INSERT INTO dadosComponente (qtdUsoCpu, fkMaquina, fkTipoComponente) VALUES (?, ?, ?);\", usoCpu, idMaquina, 1);\r\n                } catch (Exception e) {\r\n                    e.getMessage();\r\n                    Path path2 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs\");\r\n                    Path path3 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now());\r\n                    File log1 = new File(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now() + \"/\" + LocalDate.now() + \".txt\");\r\n\r\n                    if (!Files.exists(path)) {\r\n                        Files.createDirectory(path2);\r\n                        Files.createDirectory(path3);\r\n                        log.createNewFile();\r\n                        FileWriter fw = new FileWriter(log1, true);\r\n                        BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                        bw.write(LocalDateTime.now() + e.getMessage());\r\n                        bw.newLine();\r\n\r\n                        bw.close();\r\n                        fw.close();\r\n                    }else {\r\n                        FileWriter fw = new FileWriter(log, true);\r\n                        BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                        bw.write(LocalDateTime.now() + e.getMessage());\r\n                        bw.newLine();\r\n\r\n                        bw.close();\r\n                        fw.close();\r\n                    }\r\n                }\r\n                try {\r\n                    con.update(\"INSERT INTO dadosComponente (memoriaEmUso, memoriaDisponivel, fkMaquina, fkTipoComponente) VALUES (?, ?, ?, ?);\", s, sb, idMaquina, 2);\r\n                } catch (Exception e) {\r\n                    e.getMessage();\r\n                    Path path2 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs\");\r\n                    Path path3 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now());\r\n                    File log1 = new File(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now() + \"/\" + LocalDate.now() + \".txt\");\r\n\r\n                    if (!Files.exists(path)) {\r\n                        Files.createDirectory(path2);\r\n                        Files.createDirectory(path3);\r\n                        log.createNewFile();\r\n                        FileWriter fw = new FileWriter(log1, true);\r\n                        BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                        bw.write(LocalDateTime.now() + e.getMessage());\r\n                        bw.newLine();\r\n\r\n                        bw.close();\r\n                        fw.close();\r\n                    }\r\n                    else {\r\n                        FileWriter fw = new FileWriter(log, true);\r\n                        BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                        bw.write(LocalDateTime.now() + e.getMessage());\r\n                        bw.newLine();\r\n\r\n                        bw.close();\r\n                        fw.close();\r\n                    }\r\n                }\r\n                try {\r\n                    con.update(\"INSERT INTO dadosComponente (usoAtualDisco, usoDisponivelDisco, fkMaquina, fkTipoComponente) VALUES (?, ?, ?, ?);\", (tamanhoTotalDisco - tamanhoDisponivel), tamanhoDisponivel, idMaquina, 3);\r\n                }catch (Exception e) {\r\n                    e.getMessage();\r\n                    Path path2 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs\");\r\n                    Path path3 = Paths.get(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now());\r\n                    File log1 = new File(\"C:/Users/vitor/OneDrive/Documentos/SPTECH/projeto - LOGS/Jar-do-Grupo/logs/\" + LocalDate.now() + \"/\" + LocalDate.now() + \".txt\");\r\n\r\n                    if (!Files.exists(path)) {\r\n                        Files.createDirectory(path2);\r\n                        Files.createDirectory(path3);\r\n                        log.createNewFile();\r\n                        FileWriter fw = new FileWriter(log1, true);\r\n                        BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                        bw.write(LocalDateTime.now() + e.getMessage());\r\n                        bw.newLine();\r\n\r\n                        bw.close();\r\n                        fw.close();\r\n                    }\r\n                    else {\r\n                        FileWriter fw = new FileWriter(log, true);\r\n                        BufferedWriter bw = new BufferedWriter(fw);\r\n\r\n                        bw.write(LocalDateTime.now() + e.getMessage());\r\n                        bw.newLine();\r\n\r\n                        bw.close();\r\n                        fw.close();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/looca-oficial/src/main/java/dao/MaquinaDao.java b/looca-oficial/src/main/java/dao/MaquinaDao.java
--- a/looca-oficial/src/main/java/dao/MaquinaDao.java	(revision 5c7c2469316cacd64027fdba1a21704e166be038)
+++ b/looca-oficial/src/main/java/dao/MaquinaDao.java	(date 1700798431569)
@@ -27,9 +27,6 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import static java.lang.Class.forName;
-import static jdk.internal.org.jline.utils.Colors.s;
-
 public class MaquinaDao {
     Looca looca = new Looca();
     Conexao conexao = new Conexao();
